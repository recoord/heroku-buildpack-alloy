#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -u
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BUILDPACK_ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
VERSION=$(cat "$BUILDPACK_ROOT_DIR/VERSION")
SHA256SUMS=$(cat "$BUILDPACK_ROOT_DIR/SHA256SUMS")
ARCH=$(uname -m)
STACK=${STACK:-heroku-24}

log() {
    echo "-----> $*"
}

info() {
    sed -e "s/^/      /"
}

sha_check() {
    echo "$SHA256SUMS" | grep "$ARCHIVE" | {
        if command -v sha256sum >/dev/null; then
            sha256sum -c "$@" -
        elif command -v shasum >/dev/null; then
            shasum -a 256 -c "$@" -
        else
            log "unable to find shasum to check sums"
            exit 1
        fi
    }
}

download_release() {
    curl -SsfL \
        -z "$ARCHIVE" \
        -o "$ARCHIVE" \
        "https://github.com/grafana/alloy/releases/download/$VERSION/$ARCHIVE"
}

case "$ARCH" in
  amd64|x86_64)
    ARCH="amd64"
    ;;
  arm64|aarch64)
    ARCH="arm64"
    ;;
  *)
    log "unsupported architecture $ARCH"
    exit 1
    ;;
esac

case "$STACK" in
  heroku-20|heroku-22)
    ARCHIVE="alloy-linux-amd64.zip"
    ;;
  heroku-24)
    ARCHIVE="alloy-linux-$ARCH.zip"
    ;;
  *)
    log "unsupported stack $STACK"
    exit 1
    ;;
esac

mkdir -p "$CACHE_DIR"
cd "$CACHE_DIR"

log "checking cache"
if ! sha_check | info; then
    log "cache miss"
    rm -f "$ARCHIVE"
else
    log "cache hit"
fi

log "downloading release $VERSION/$ARCHIVE"
download_release 2>&1|info

log "verifying $VERSION/$ARCHIVE"
if ! sha_check 2>&1|info; then
    log "checksum failed - update VERSION or SHA256SUMS"
    exit 1
fi

log "unpacking $ARCHIVE"
unzip -o "$ARCHIVE" 2>&1|info

log "installing binary alloy"
mkdir -p "$BUILD_DIR/vendor/alloy/bin"
install -m 0755 ${ARCHIVE%%.zip} "$BUILD_DIR/vendor/alloy/bin/alloy" 2>&1|info

log "installing script start-alloy"
mkdir -p "$BUILD_DIR/bin"
install -m 0755 "$BUILDPACK_ROOT_DIR/bin/start-alloy" "$BUILD_DIR/bin/start-alloy" 2>&1|info
